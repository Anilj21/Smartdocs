{
  "lJHXNYdV3JRagRcGDqugsCgRFMk2": {
    "Blockchain - Half chapter 3.pdf": {
      "summary": "The document appears to be a lecture notes on distributed consensus algorithms, particularly in the context of permissioned blockchains. Here's a summary of the key points:\n\n**Introduction**\n\n* Distributed consensus is a mechanism for reaching an agreement among nodes in a network\n* Permissioned blockchain refers to a blockchain where access is restricted to authorized nodes\n\n**Why Distributed Consensus?**\n\n* In distributed computing, multiple decision-makers need to agree on a single value or state\n* State machine replication (SMR) is a technique used to ensure that all nodes have the same view of the system's state\n\n**Types of Faults in Distributed Systems**\n\n* Crash faults: a node crashes and cannot send messages\n* Network or partition faults: the network partitions, preventing communication between nodes\n* Byzantine faults: a malicious node behaves differently depending on its perspective (e.g., sending conflicting values)\n\n**Consensus for 3 Processes**\n\n* Each process can have one of three states:\n\t+ Undecided: proposed value has been exchanged but not agreed upon\n\t+ Communication: exchanging values to reach agreement\n\t+ Decided: agreement reached, decision variable set\n\n**Requirements of Consensus Algorithm**\n\n* Termination: each correct process sets its decision variable\n* Agreement: all correct processes agree on the same decision value\n* Integrity: if all correct processes propose the same value, any correct process in the decided state chooses that value\n\n**Different Algorithms**\n\n* Initial algorithms for distributed consensus:\n\t+ Paxos (supports crash and network faults)\n\t+ RAFT (also supports crash and network faults)\n* Later algorithms to support Byzantine faults:\n\t+ Not explicitly mentioned in the lecture notes, but may include algorithms like PBFT (Parallel Byzantine Fault Tolerance)\n\n**Key Takeaways**\n\n* Distributed consensus is essential for permissioned blockchains to ensure consistency across nodes\n* State machine replication is a key technique used in distributed consensus algorithms\n* Crash, network, and Byzantine faults can occur in distributed systems, requiring robust consensus algorithms to handle them.",
      "savedAt": "2025-10-14T08:59:21.984Z"
    },
    "Rabbit_and_Tortoise_Summary.docx": {
      "summary": "Here is a concise summary of the document using bullet points:\n\n**The Story of the Rabbit and the Tortoise**\n\n* A fast but overconfident rabbit challenges a slow-moving tortoise to a race\n* The rabbit takes a nap midway, confident of his victory\n* Meanwhile, the tortoise continues steadily without stopping\n* By the time the rabbit wakes up, the tortoise has already crossed the finish line and won the race\n\n**Key Moral:** \"Slow and steady wins the race\"",
      "savedAt": "2025-10-14T17:28:28.744Z"
    }
  }
}